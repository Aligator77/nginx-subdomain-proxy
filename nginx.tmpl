server {
    listen 80;
    server_name ~^(?P<subdomain>.+)\.{{ $.Env.FROM_HOST_REGEXP }}$;

    {{ if $.Env.IGNORE_HTTP }}
    if ($http_x_forwarded_proto = "http") {
        return 301 https://$host$request_uri;
    }
    {{ end }}

    gzip  on;
    gzip_proxied  any;
    gzip_vary  on;
    gzip_min_length 500;
    gzip_types  text/plain
                text/css
                text/xml
                application/javascript
                application/json
                image/svg+xml;
    gzip_comp_level 6;

    server_tokens off;

    set $proxy_proto "";
    if ($http_x_forwarded_proto != "") {
        set $proxy_proto $http_x_forwarded_proto;
    }

    if ($http_x_forwarded_proto = "") {
        set $proxy_proto "{{ $.Env.X_FORWARDED_PROTO }}";
    }

    location / {
        resolver {{ $.Env.RESOLVER_IP }}{{ if $.Env.RESOLVER_VALID_SEC }} valid={{ $.Env.RESOLVER_VALID_SEC }}s{{ end }};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto $proxy_proto;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        {{ if $.Env.TO_HOST }}
        proxy_pass https://$subdomain.{{ $.Env.TO_HOST }};
        {{ end }}
        {{ if $.Env.PROXY_PASS }}
        proxy_pass {{ $.Env.PROXY_PASS }};
        {{ end }}
    }
}

server {
    listen 80 default_server;
    send_timeout 120;
    add_header Cache-Control no-cache;

    location /healthcheck {
      empty_gif;
      break;
    }
}
